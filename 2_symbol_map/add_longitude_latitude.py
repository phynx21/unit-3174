import pandas as pd

# Load your dataset
df = pd.read_csv("data/youtube-users-by-country-2025-clean.csv")

# Reference table of ISO-A2 country centroids (lat, lon)
# You can extend this dictionary as needed.
country_centroids = {
    "IN": (20.5937, 78.9629),
    "US": (37.0902, -95.7129),
    "BR": (-14.2350, -51.9253),
    "ID": (-0.7893, 113.9213),
    "MX": (23.6345, -102.5528),
    "JP": (36.2048, 138.2529),
    "PK": (30.3753, 69.3451),
    "DE": (51.1657, 10.4515),
    "VN": (14.0583, 108.2772),
    "TR": (38.9637, 35.2433),
    "GB": (55.3781, -3.4360),
    "FR": (46.6034, 1.8883),
    "EG": (26.8206, 30.8025),
    "KR": (35.9078, 127.7669),
    "TH": (15.8700, 100.9925),
    "IT": (41.8719, 12.5674),
    "ES": (40.4637, -3.7492),
    "BD": (23.6850, 90.3563),
    "CA": (56.1304, -106.3468),
    "AR": (-38.4161, -63.6167),
    "CO": (4.5709, -74.2973),
    "NG": (9.0820, 8.6753),
    "SA": (23.8859, 45.0792),
    "PL": (51.9194, 19.1451),
    "ZA": (-30.5595, 22.9375),
    "UA": (48.3794, 31.1656),
    "MY": (4.2105, 101.9758),
    "DZ": (28.0339, 1.6596),
    "IQ": (33.2232, 43.6793),
    "PH": (12.8797, 121.7740),
    "MA": (31.7917, -7.0926),
    "AU": (-25.2744, 133.7751),
    "CN-TW": (23.6978, 120.9605),  # Taiwan special case
    "PE": (-9.1900, -75.0152),
    "CL": (-35.6751, -71.5430),
    "NL": (52.1326, 5.2913),
    "RO": (45.9432, 24.9668),
    "EC": (-1.8312, -78.1834),
    "KE": (0.0236, 37.9062),
    "BE": (50.5039, 4.4699),
    "AE": (23.4241, 53.8478),
    "SE": (60.1282, 18.6435),
    "CZ": (49.8175, 15.4730),
    "PT": (39.3999, -8.2245),
    "GR": (39.0742, 21.8243),
    "GT": (15.7835, -90.2308),
    "AT": (47.5162, 14.5501),
    "HU": (47.1625, 19.5033),
    "LK": (7.8731, 80.7718),
    "DO": (18.7357, -70.1627),
    "TN": (33.8869, 9.5375),
    "IL": (31.0461, 34.8516),
    "CH": (46.8182, 8.2275),
    "GH": (7.9465, -1.0232),
    "HK": (22.3193, 114.1694),
    "JO": (30.5852, 36.2384),
    "BO": (-16.2902, -63.5887),
    "SG": (1.3521, 103.8198),
    "RS": (44.0165, 21.0059),
    "DK": (56.2639, 9.5018),
    "LB": (33.8547, 35.8623),
    "NO": (60.4720, 8.4689),
    "HN": (13.6929, -80.7921),
    "FI": (61.9241, 25.7482),
    "BG": (42.7339, 25.4858),
    "PY": (-23.4425, -58.4438),
    "SK": (48.6690, 19.6990),
    "NZ": (-40.9006, 174.8860),
    "IE": (53.4129, -8.2439),
    "OM": (21.4735, 55.9754),
    "CR": (9.7489, -83.7534),
    "SN": (14.4974, -14.4524),
    "SV": (13.7942, -88.8965),
    "KW": (29.3117, 47.4818),
    "NI": (12.8654, -85.2072),
    "HR": (45.1000, 15.2000),
    "QA": (25.3548, 51.1839),
    "UY": (-32.5228, -55.7658),
    "PA": (8.5380, -80.7821),
    "PR": (18.2208, -66.5901),
    "BA": (43.9159, 17.6791),
    "LT": (55.1694, 23.8813),
    "SI": (46.1512, 14.9955),
    "LV": (56.8796, 24.6032),
    "BH": (26.0667, 50.5577),
    "EE": (58.5953, 25.0136),
    "IS": (64.9631, -19.0208),
}

# Convert dictionary into a DataFrame
centroids_df = pd.DataFrame([
    {"flagCode": code, "latitude": lat, "longitude": lon}
    for code, (lat, lon) in country_centroids.items()
])

# Merge coordinates into your dataset
df = df.merge(centroids_df, on="flagCode", how="left")

# Save updated file
df.to_csv("youtube-users-by-country-2025-with-coords.csv", index=False)

print("âœ… Dataset updated with latitude and longitude!")
